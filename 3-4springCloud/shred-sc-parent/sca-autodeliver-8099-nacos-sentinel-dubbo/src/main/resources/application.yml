server:
  port: 8099


dubbo:
  registry:
    # 挂载到 Spring Cloud 注册中心
    address: nacos://123.98.63.223:8848
  cloud:
    # 订阅服务提供方的应用列表，订阅多个服务提供者使用 "," 连接
    subscribed-services: sc-resume

spring:
  application:
    name: sc-autodeliver
  main:
    allow-bean-definition-overriding: true
  cloud:
    nacos:
      discovery:
        # 集群中各个节点信息都配置在此（域名- virtual IP -绑定映射到各个实例的地址信息）
        server-addr: 127.0.0.1:8848,127.0.0.1:8849,127.0.0.1:8850
    sentinel:
      transport:
        dashboard: 127.0.0.1:8080 # sentinel dashboard/console
        port: 8719 # sentinel 会在该端口启动http server 控制台定义的的限流等规则才能发送传递过来
      # Sentinel Nacos数据源配置，Nacos中的规则会自动同步到sentinel控 制台的流控规则中
      datasource:
        # 此处的flow为自定义数据源名
        flow: # 流控规则
          nacos:
            server-addr: ${spring.cloud.nacos.discovery.server-addr}
            data-id: ${spring.application.name}-flow-rules
            groupId: DEFAULT_GROUP
            data-type: json
            rule-type: flow # 类型来自RuleType类
        degrade:
          nacos:
            server-addr: ${spring.cloud.nacos.discovery.server-addr}
            data-id: ${spring.application.name}-degrade-rules
            groupId: DEFAULT_GROUP
            data-type: json
            rule-type: degrade # 类型来自RuleType类
#
#
#SC-RESUME:
#  ribbon:
#    #请求连接超时时间
#    #ConnectTimeout: 2000
#    #请求处理超时时间
#    ReadTimeout: 5000
#    #对所有操作都进行重试
#    OkToRetryOnAllOperations: true
#    ####根据如上配置，当访问到故障请求的时候，它会再尝试访问一次当前实例(次数 由MaxAutoRetries配置)，
#    ####如果不行，就换一个实例进行访问，如果还不行，再换一次实例访问(更换次数 由MaxAutoRetriesNextServer配置)，
#    ####如果依然不行，返回失败信息。
#    MaxAutoRetries: 0 #对当前选中实例重试次数，不包括第一次调用
#    MaxAutoRetriesNextServer: 0 #切换实例的重试次数
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule
#
#logging:
#  level:
#    # 设置Feign日志只会对日志级别为debug的做出响应
#    com.shred.sc.service.ResumeServiceFeignClient: debug


# springboot中暴露健康检查等断点接口
management:
  endpoints:
    web:
      exposure:
        include: '*'
    # 暴露健康接口的细节
  endpoint:
    health:
      show-details: always
