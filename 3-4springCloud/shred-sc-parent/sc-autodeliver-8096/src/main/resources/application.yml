server:
  port: 8096

eureka:
  client:
    service-url:
      #注册到集群
      defaultZone: http://EurekaServerA:8761/eureka,http://EurekaServerB:8762/eureka
  instance:
    #使用ip注册，否则会使用主机名注册了(此处考虑到对老版本的兼容，新版本经过实验都是ip)
    prefer-ip-address: true
    #自定义实例显示格式，加上版本号，便于多版本管理，注意是ip-address，早期版本是ipAddress
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}:@project.version@
spring:
  application:
    name: sc-autodeliver

SC-RESUME:
  ribbon:
    #请求连接超时时间
    #ConnectTimeout: 2000
    #请求处理超时时间
    ReadTimeout: 5000
    #对所有操作都进行重试
    OkToRetryOnAllOperations: true
    ####根据如上配置，当访问到故障请求的时候，它会再尝试访问一次当前实例(次数 由MaxAutoRetries配置)，
    ####如果不行，就换一个实例进行访问，如果还不行，再换一次实例访问(更换次数 由MaxAutoRetriesNextServer配置)，
    ####如果依然不行，返回失败信息。
    MaxAutoRetries: 0 #对当前选中实例重试次数，不包括第一次调用
    MaxAutoRetriesNextServer: 0 #切换实例的重试次数
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule


# 开启Feign的熔断功能
feign:
  hystrix:
    enabled: true
  compression:
    request:
      enabled: true # 开启请求压缩
      # 设置压缩的数据类型，此处也是默认值
      mime-types: text/html,application/xml,application/json
      # 设置触发压缩的大小下限，此处也是默认值
      min-request-size: 2048
    response:
      enabled: true # 开启响应压缩



logging:
  level:
    # 设置Feign日志只会对日志级别为debug的做出响应
    com.shred.sc.service.ResumeServiceFeignClient: debug

# springboot中暴露健康检查等断点接口
management:
  endpoints:
    web:
      exposure:
        include: '*'
    # 暴露健康接口的细节
  endpoint:
    health:
      show-details: always

# 配置熔断策略:
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            # 熔断超时设置，默认为1秒
            timeoutInMilliseconds: 2000
